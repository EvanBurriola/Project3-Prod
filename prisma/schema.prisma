generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customerorders {
  orderid      Int           @id @default(autoincrement())
  customername String        @db.VarChar(100)
  subtotal     Float?
  salestax     Float?
  ordertotal   Float?
  employeeid   Int?
  employeename String        @db.VarChar(100)
  orderdate    DateTime?     @default(now()) @db.Timestamp(6)
  employees    employees?    @relation(fields: [employeeid], references: [employeeid], onDelete: NoAction, onUpdate: NoAction)
  pizzaorders  pizzaorders[]
}

model employees {
  employeeid      Int              @id @default(autoincrement())
  employeename    String           @unique @db.VarChar(100)
  employeerole    String           @db.VarChar(10)
  currentemployee Boolean?
  customerorders  customerorders[]
}

model inventory {
  inventoryid              Int      @id @default(autoincrement())
  ingredientname           String   @db.VarChar(100)
  quantityounces           Int?
  priceperounce            Float?
  averageamountperunitsold Int?
  minimumquantity          Int?
  itemtype                 String?  @db.VarChar
  pizzas                   pizzas[]
}

model menuitems {
  typeid    Int    @id @default(autoincrement())
  pizzatype String @db.VarChar(50)
  itemprice Float?
}

model pizzaorders {
  pizzaid        Int             @id @default(autoincrement())
  price          Float?
  orderid        Int?
  customerorders customerorders? @relation(fields: [orderid], references: [orderid], onDelete: NoAction, onUpdate: NoAction)
  pizzas         pizzas[]
}

model pizzas {
  entryid         Int          @id @default(autoincrement())
  pizzatype       String       @db.VarChar(15)
  ingredientname  String       @db.VarChar(100)
  inventoryid     Int?
  ingredientprice Float?
  quantityused    Int?
  pizzaid         Int?
  inventory       inventory?   @relation(fields: [inventoryid], references: [inventoryid], onDelete: NoAction, onUpdate: NoAction)
  pizzaorders     pizzaorders? @relation(fields: [pizzaid], references: [pizzaid], onDelete: NoAction, onUpdate: NoAction)
}
